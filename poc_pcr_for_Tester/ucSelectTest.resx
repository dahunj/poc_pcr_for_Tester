<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picBox_SelectTestNext.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAG9QTFRF////
        AAAAw8PDMjIybGxs8PDwfX19y8vL3Nzc1tbW2dnZOzs739/f09PTCAgI5eXlLS0tHR0dYWFhSkpKT09P
        QEBAW1tbaGhocnJy9fX1xcXFKCgoVVVVX19fg4ODioqKm5ubODg4rKysFBQUkZGRaY734gAABFlJREFU
        eF7t3d1W4jAUhuFuQFEBZfhTFFGcuf9rnP7sIm3TZDceMN83eY9c6HLxrLSJAk2zVCqVSqVSqVQqRd9+
        r1/QNr290a9Ym8rkSb8kbSrywk3MheSjWAi5iaVQnomJlZCZqEJiYi2Uw50+wtZZKO+kxG+h7DiJF0JS
        4qVQdg/6KFMNISWxKWQ8UFtC2dzrN2hqC2W90O+w1BHSEbtC2XIdqA6hbKhG0SWUAxPRKaSaUd1Cpumm
        Ryizqf4AfH1C2bIQe4U0o9gvZBlFj1DWFESfkIPoFVIcqH6hjF/153ALCOUETwwJ8UcxKIQfxbBQtiP9
        WcwMQtlCj6JFiL1omITQ041NiDzdGIUyhp1uFioINv7BuTgfXa/XTwWE+8GM+vE2vl5v+vwNxRNv9Tf8
        80UvGjBCWUZONzhCeYsjAgkjiUjCOCKUUE4RRCyhzIYTwYQRRDTh8EUDTjh4usETDiUCCgcSEYXD/l+E
        FA6aUTGFQ4igwgEHKqrQvi7CCs0vMuIKrURgoZGILLS9bQMtNL0Chy2UWZgILjQsGujC8HQDLwz+dYMv
        lKX/1XACYWDRYBD6iRRC77rIIfQtGiRCz6LBIuxfNGiEsuwZRR5h32s3RMKeGZVJ6P7gNJXQeREDl1BO
        XSKZ0DGKbMLuKNIJZdu68o1P2L4KlVDYIjIKm5doUgob5yKn8HIUSYUXl0uzCmVd75RCK5SDjiKvsN4M
        hlgo73N2oewKIrVQVjmRW1js5kculE964Re78LgnFxY7MVMLy62mmYW35baoxELdZppXWO+jTSs879zL
        KlydtyYmFX4DSYUXQE5hY/dsRuFz+Z9vHaGwCSQUXp6DRXTCXQtIJ+wA2YTvHSCZsH0OFlEJV649z5mE
        TiCTsGdLdx7hprnQn6MR9gFphL1AFmH1NpMzDuHKc98ICqF7mdAYhL4RpBD2TzJl+MLQ3bDghZsAEF7o
        WSY0cKF/kinDFnqXCQ1aaAFCCw/Bc7AIWGgDAgutd4WEFZaf6LKEKjQsExqo0DSLVmEKBwAxhYNulIgo
        NC4TGqBw4M2D8YTmZUKDExYf+x0UmtC+DtaBCYcsExqWMOb23VDCYcuEhiSMu8c8kDDyJvo4wonjPXpL
        MMJJzDlY9PU8uV4HffaGooHZ/uaKjfTph4sHXjfrvYJcHwTCyCp0fRAII6MQdgStwsYnfsFaPCrCV33d
        BGQWITTQIsQGGoSxf6r9KwWFyJNMWUgIDwwJ0Q/RPL8QfJIp8wqrK0DB8wkpgNnit3K6vRQXKeN3/0s9
        nUiA/UKGSaasT0gD7BOWGwVw5BZyzKJVTuGRCOgUHnkO0TyHkOgcLHro3NSZDJg9LBVWxwbsCLnOwaKm
        8JEP2BISApvCD0JgQ3jc64NU3Z2URzqCuXCmPspzsOgs/KA8RPNU+EgLrIWk52BRJSQGVkLeQzRvvhX5
        wwzM5mtyYD6G5MDsaUQOTKVSqVQqlUql/pOy7C+4gIRUEvKP5QAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="picBox_btn_back.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>